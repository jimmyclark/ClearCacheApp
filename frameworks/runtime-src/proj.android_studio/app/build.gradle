apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.app.clearcache"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        multiDexEnabled true

        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi', 'arm64-v8a' //  'armeabi-v7a', 'armeabi', 'x86', 'x86_64'
        }
        manifestPlaceholders = [
            BUGLY_APP_VERSION_VALUE : rootProject.ext.versionName
        ]
    }
    signingConfigs {
        release {
            try {
                storeFile file(KEY_STORE_RELEASE)
                storePassword KEYSTORE_PASSWORD
                keyAlias KEY_ALIAS
                keyPassword KEY_PASSWORD
            }
            catch (ex) {
                throw new InvalidUserDataException("You should define KEYSTORE_PASSWORD and KEY_PASSWORD in gradle.properties.")
            }
        }
        debug {
            try {
                storeFile file(KEY_STORE_RELEASE)
                storePassword KEYSTORE_PASSWORD
                keyAlias KEY_ALIAS
                keyPassword KEY_PASSWORD
            }
            catch (ex) {
                throw new InvalidUserDataException("You should define KEYSTORE_PASSWORD and KEY_PASSWORD in gradle.properties.")
            }
//            storeFile file("debug.keystore")
        }
    }

    buildTypes {
        release {
            // 不显示Log
            buildConfigField "boolean", "LOG_DEBUG", "false"
            // 移除无用的resource文件
            signingConfig signingConfigs.release

            zipAlignEnabled true
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            // 显示Log
            buildConfigField "boolean", "LOG_DEBUG", "true"
            signingConfig signingConfigs.debug
            // debug 不需要缩紧 png
            aaptOptions.cruncherEnabled = false
            //versionNameSuffix "-debug"
            zipAlignEnabled true
            minifyEnabled false
            shrinkResources false
        }
    }
}

repositories {
    flatDir {
        dirs 'libs'   // aar 目录
    }
}

dependencies {
    implementation fileTree(include: ['*.aar', '*.jar'], dir: 'libs')
    implementation project(':libcocos2dx')

    // MultiDex的依赖
    implementation 'com.android.support:multidex:1.0.0'

    implementation 'com.android.support:appcompat-v7:28.+'
}

